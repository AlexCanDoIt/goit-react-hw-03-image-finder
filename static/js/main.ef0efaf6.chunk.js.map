{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["searchQuery","currentPage","pageSize","axios","get","then","r","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","previewImage","onClickImage","onClick","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","Loader","Button","showModal","onClickButton","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","addEventListener","removeEventListener","createPortal","image","App","error","imageForModal","isLoading","onChangeQuery","fetchImages","options","imagesApi","prevState","catch","finally","toggleModal","prevProps","shouldRenderLoadMoreButton","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef0efaf6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://pixabay.com/api/';\r\nconst KEY = '20676418-087852e37819860cce9abe695';\r\nconst TYPE = 'photo';\r\nconst ORIENTATION = 'horizontal';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `${URL}?key=${KEY}&q=${searchQuery}&image_type=${TYPE}&orientation=${ORIENTATION}&page=${currentPage}&per_page=${pageSize}`,\r\n    )\r\n    .then(r => r.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component{\r\n  state = { query: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ previewImage, onClickImage }) => (\r\n  <li\r\n    className=\"ImageGalleryItem\"\r\n    onClick={onClickImage}>\r\n    \r\n    <img\r\n      className=\"ImageGalleryItem-image\"\r\n      src={previewImage}\r\n      alt=\"\" />\r\n  </li>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n  previewImage: PropTypes.string.isRequired,\r\n  onClickImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClickImage }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem key={id} previewImage={webformatURL} onClickImage={() => onClickImage(largeImageURL)}/>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.object.isRequired,\r\n  ).isRequired,\r\n  onClickImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery;","const Loader = () => (\r\n  <h1 className=\"Loader\">It's gonna be legen... wait for it ...dary. Legendary!</h1>\r\n);\r\n\r\nexport default Loader;","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ showModal, onClickButton }) => {\r\n  !showModal && window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n\r\n  return (\r\n    <button className='Button' type='button' onClick={onClickButton}>Load more</button>\r\n  )\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickButton: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\" >\r\n          <img src={ this.props.image } alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;","/* Modules */\r\nimport { Component } from 'react';\r\n// import shortid from 'shortid';\r\n\r\n/* Components */\r\nimport imagesApi from './services/images-api';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Loader from './components/Loader';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\n\r\n/* Styles */\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    error: null,\r\n    imageForModal: '',\r\n    showModal: false,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      images: [],\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imagesApi\r\n      .fetchImages(options)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  toggleModal = image => {\r\n    this.setState(({ showModal }) => ({\r\n      imageForModal: !showModal ? image : '',\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, error, imageForModal, showModal, isLoading } = this.state;\r\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <Searchbar onSubmit={this.onChangeQuery} />\r\n          {error && <h1 className=\"Error\">Oops, something went wrong...</h1>}\r\n          <ImageGallery images={images} onClickImage={this.toggleModal} />\r\n          {isLoading && <Loader />}\r\n          {shouldRenderLoadMoreButton && (\r\n            <Button showModal={showModal} onClickButton={this.fetchImages} />\r\n          )}\r\n        </div>\r\n        {imageForModal && (\r\n          <Modal image={imageForModal} onClose={this.toggleModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* Modules */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* Components */\nimport App from './App';\n\n/* Styles */\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}